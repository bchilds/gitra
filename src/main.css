:root {
  --backgroundWhite: #f8f8ff;
  --secondaryBgWhite: #ededfa;
  --borderRadius: 15px;
  --borderColor: #c3c3c3;
}

html {
  font-size: 12px;
}

* {
  box-sizing: border-box;
}

body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  background: var(--backgroundWhite);
}

#root {
  display: flex;
}

p {
  margin: 0;
}

input::placeholder {
  opacity: 0.75;
}

/* COMPONENTS */
.input-styles,
.button-styles {
  font-size: inherit;
}

.modal-overlay {
  background-color: #999999;
  height: 100vh;
  left: 0;
  opacity: 0.5;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 500;
}

.modal-wrapper {
  display: flex;
  justify-content: center;
  left: 0;
  outline: 0;
  overflow-x: hidden;
  overflow-y: auto;
  position: fixed;
  font-size: initial;
  top: 25%;
  width: 100%;
  z-index: 1000;
}

.modal-body {
  align-items: center;
  background: white;
  border-radius: 0.4rem;
  display: flex;
  flex-direction: column;
  margin: 1.875rem;
  min-width: 250px;
  max-width: 500px;
  position: relative;
  z-index: 100;
}

.modal-header {
  width: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 1.875rem 0.9375rem 1.875rem 0.9375rem;
  border-bottom: 1px solid var(--borderColor);
}

.modal-title {
  margin: 0;
}

.modal-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem 0.75rem;
  width: 100%;
}

.modal-footer {
  border-top: 1px solid var(--borderColor);
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem;
}
/* END COMPONENTS */

.app-root {
  display: flex;
  width: 100%;
  height: 100%;
}

.page {
  width: 100%;
  height: 100%;
  margin: 1.5rem;

  display: flex;
  flex-direction: column;
}

/* main page */
.main-header {
  display: flex;
  flex-direction: row;
  justify-items: center;
  margin: 15px auto;
}

.main-header > button:not(:last-of-type) {
  margin-right: 1rem;
}
/* end main page */

/* Drag and Drop context block */
.dnd-context-container {
  display: grid;
  grid-gap: 0.5rem;
}
/* end D&D context */

/* content-section */
.section-title-wrapper {
  display: flex;
  justify-content: space-between;
}

.section-item-count {
  background: var(--secondaryBgWhite);
  height: 1.5em;
  width: 1.5em;
  display: flex;
  border-radius: 100%;
  justify-content: center;
  align-items: center;
}

.content-section {
  display: grid;
  grid-gap: 0.5rem;
  border: 1px solid black;
  border-radius: var(--borderRadius);
  background: skyblue;
  padding: 1rem;
}
/* end content-section */

/* content block */
.content-item {
  min-width: 25%;
  background: var(--secondaryBgWhite);
  display: grid;
  border: 1px solid var(--borderColor);
  border-radius: var(--borderRadius);
  padding: 1rem;
}
.content-item:first-of-type {
  margin-top: 0;
}
.content-item:last-of-type {
  margin-bottom: 0;
}

.content-item > .content-title {
  margin-top: 0;
}

.content-item > .content-description {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
/* end content block */

/* pr table block */
.pr-table-header {
  width: 100%;
  padding: 0.75rem 0.5rem;
  display: flex;
  justify-content: space-between;
}

.pr-table-body {
  width: 100%;
}

.pr-table-empty,
.pr-table-body-border {
  border: 1px solid var(--borderColor);
  border-radius: var(--borderRadius);
}

.pr-table-empty {
  text-align: center;
  padding: 15px 5px;
}

.pr-table-row {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: inherit;
  cursor: pointer;
}

.pr-table-row:hover {
  background: var(--secondaryBgWhite);
}

.pr-table-row-content {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}
.pr-table-row-content > h4 {
  margin: 0;
  padding-bottom: 5px;
}
.pr-table-row-content > a {
margin-right: auto;
}
.pr-table-row-content > a:hover {
  color: limegreen;
}

.pr-table-row-action {
  max-width: 15%;
  text-align: center;
}

/* end pr table block */

@media (min-width: 850px) {
  html {
    font-size: 14px;
  }

  .page,
  .dnd-context-container {
    flex-direction: row;
  }
}
